# =============================================================================
# FILE: .github/workflows/docker-test.yml
# PURPOSE: Continuous Integration pipeline for MCP Site Scanner
# -----------------------------------------------------------------------------
# 📖 DEVELOPER NOTES — READ LIKE SCRIPTURE
# 1. This pipeline ensures each push builds, tests, and records truth.
# 2. Dockerized test suite runs automatically; reports are archived.
# 3. No build passes without verifiable test evidence.
# =============================================================================

name: MCP Site Scanner CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  docker-tests:
    name: 🧪 Dockerized Test Suite
    runs-on: ubuntu-latest

    steps:
      # ───────────────────────────────────────────────────────────────────────
      #  STEP 1: Checkout code
      # ───────────────────────────────────────────────────────────────────────
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # ───────────────────────────────────────────────────────────────────────
      #  STEP 2: Set up Docker Buildx
      # ───────────────────────────────────────────────────────────────────────
      - name: 🧱 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ───────────────────────────────────────────────────────────────────────
      #  STEP 3: Build Docker image
      # ───────────────────────────────────────────────────────────────────────
      - name: 🐳 Build Docker image
        run: |
          docker build -t mcp-scanner .

      # ───────────────────────────────────────────────────────────────────────
      #  STEP 4: Run Dockerized tests
      # ───────────────────────────────────────────────────────────────────────
      - name: 🧪 Run Dockerized test suite
        run: |
          chmod +x run-docker-tests.sh
          bash run-docker-tests.sh

      # ───────────────────────────────────────────────────────────────────────
      #  STEP 5: Upload HTML reports as CI artifacts
      # ───────────────────────────────────────────────────────────────────────
      - name: 📤 Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: mcp-site-scanner-reports
          path: reports/tests/
          if-no-files-found: ignore

      # ───────────────────────────────────────────────────────────────────────
      #  STEP 6: Post summary
      # ───────────────────────────────────────────────────────────────────────
      - name: 📊 Display success message
        run: |
          echo "✅ MCP Site Scanner Dockerized tests completed successfully."
          echo "📂 Reports directory: reports/tests/"
